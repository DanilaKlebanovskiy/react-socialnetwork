{"version":3,"sources":["Hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogsItem","className","s","dialog","id","activeClassName","active","name","Message","message","style","user","opponent","valueMessage","maxLength","maxLengthCreator","ReduxDialogsForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","placeholder","component","Textarea","Dialogs","newDialogsData","dialogsData","map","newMessageData","messageData","dialogs","dialogsItem","messages","values","addMessage","AddNewMessage","newMessageText","compose","dialogsPage","dispatch","text","addMessageActionCreator"],"mappings":"4OAKIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAQtC,OAFmCM,YAAQX,EAARW,CAAoCL,K,oBCjB3EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oBCAjND,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,uBAAuB,SAAW,6B,sFCUhFC,EARK,SAACN,GACjB,OACI,qBAAKO,UAAWC,IAAEC,OAAlB,SACI,cAAC,IAAD,CAASR,GAAI,YAAcD,EAAMU,GAAIC,gBAAiBH,IAAEI,OAAxD,SAAiEZ,EAAMa,U,kBCMpEC,EATC,SAACd,GACb,OACI,qBAAKO,UAAS,UAAKC,IAAEO,QAAP,sBACI,SAAhBf,EAAMgB,MAAiBR,IAAES,KAAKT,IAAEU,UADlC,SAEKlB,EAAMmB,gB,iDC2CfC,EAAYC,YAAiB,IAc3BC,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAZL,SAACvB,GACjB,OACI,uBAAMyB,SAAUzB,EAAM0B,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,SAAY,CAACC,IAAST,GAAYU,YAAa,kBAAmBjB,KAAM,iBAAkBkB,UAAWC,QAEhH,8BACI,yDAODC,EAxDC,SAACjC,GAEb,IAAKA,EAAMN,OAAQ,OAAO,cAAC,IAAD,CAAUO,GAAI,WACxC,IAAIiC,EAAiBlC,EAAMmC,YAAYC,KACtC,SAAA3B,GAAM,OAAI,cAAC,EAAD,CAAaI,KAAMJ,EAAOI,KAAMH,GAAID,EAAOC,QAClD2B,EAAiBrC,EAAMsC,YAAYF,KACtC,SAAArB,GACO,OAAIA,EAAQL,GAAK,IAAM,EACZ,cAAC,EAAD,CAASM,MAAO,OAAQG,aAAcJ,EAAQA,UAE9C,cAAC,EAAD,CAASC,MAAO,UAAWG,aAAcJ,EAAQA,aAiBpE,OACI,sBAAKR,UAAWC,IAAE+B,QAAlB,UACI,qBAAKhC,UAAWC,IAAEgC,YAAlB,SACKN,IAEL,sBAAK3B,UAAWC,IAAEiC,SAAlB,UACKJ,EACD,cAACf,EAAD,CAAkBG,SAZf,SAACiB,IAJI,SAACA,GACjB1C,EAAM2C,WAAWD,GAIjBE,CAAcF,EAAOG,0B,wBCPdC,sBAAQ3C,aAXC,SAACV,GACrB,MAAO,CACH0C,YAAa1C,EAAMsD,YAAYZ,YAC/BG,YAAa7C,EAAMsD,YAAYT,YAC/BO,eAAgBpD,EAAMsD,YAAYF,mBAZf,SAACG,GACxB,MAAO,CACHL,WAAY,SAACM,GACTD,EAASE,YAAwBD,SAgBwBrD,IAAtDkD,CAAwEb","file":"static/js/4.71aacbc6.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\nimport React from 'react'\nimport {connect} from \"react-redux\";\nimport Loading from \"../components/Users/Loading\";\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\n            return <Component {...this.props}/>\n        }\n    }\n    let connectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return connectAuthRedirectComponent\n}\n\nexport const withProfileRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (this.props.isAuth) return <Redirect to={\"/profile\"}/>\n            return <Component {...this.props}/>\n        }\n    }\n    let connectProfileRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return connectProfileRedirectComponent\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItem\":\"Dialogs_dialogsItem__8wYI2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Messages_message__3J_zU\",\"user\":\"Messages_user__gkbBb\",\"opponent\":\"Messages_opponent__3CfKu\"};","import s from \"../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogsItem = (props) => {\n    return (\n        <div className={s.dialog}>\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogsItem","import s from \"./Messages.module.css\";\n\n\nconst Message = (props) => {\n    return (\n        <div className={`${s.message} \n        ${props.style === 'user'?s.user:s.opponent}`}>\n            {props.valueMessage}\n        </div>\n    )\n}\n\nexport default Message","import s from \"./Dialogs.module.css\"\nimport DialogsItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Messages/Message\";\nimport React, {Component} from 'react';\nimport {Redirect} from \"react-router-dom\"\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControl/FormsControl\";\nimport {maxLengthCreator, required} from \"../../utilits/validators\";\n\n\nconst Dialogs = (props) => {\n\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\n    let newDialogsData = props.dialogsData.map\n    (dialog => <DialogsItem name={dialog.name} id={dialog.id}/>)\n    let newMessageData = props.messageData.map\n    (message => {\n            if (message.id % 2 === 0) {\n                return <Message style={\"user\"} valueMessage={message.message}/>\n            } else {\n                return <Message style={\"oponent\"} valueMessage={message.message}/>\n            }\n        }\n    )\n\n\n\n\n    let AddNewMessage = (values) => {\n        props.addMessage(values)\n    }\n\n    let onSubmit = (values) => {\n        AddNewMessage(values.newMessageText)\n\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItem}>\n                {newDialogsData}\n            </div>\n            <div className={s.messages}>\n                {newMessageData}\n                <ReduxDialogsForm onSubmit={onSubmit}/>\n            </div>\n        </div>\n    )\n}\n\nlet maxLength = maxLengthCreator(20)\n\nconst DialogsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field validate = {[required,maxLength]} placeholder={\"enter your text\"} name={\"newMessageText\"} component={Textarea}/>\n            </div>\n            <div>\n                <button>SendMessage</button>\n            </div>\n        </form>\n    )\n}\nconst ReduxDialogsForm = reduxForm({form: 'dialogs'})(DialogsForm)\n\nexport default Dialogs","import {addMessageActionCreator, onMessageDaialogsChangeActionCreator} from \"../Redux/dialogs_reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (text) => {\n            dispatch(addMessageActionCreator(text))\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsData: state.dialogsPage.dialogsData,\n        messageData: state.dialogsPage.messageData,\n        newMessageText: state.dialogsPage.newMessageText,\n\n    }\n}\n\n\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)\n\n\n"],"sourceRoot":""}