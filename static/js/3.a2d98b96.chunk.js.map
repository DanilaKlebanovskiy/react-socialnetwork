{"version":3,"sources":["Hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Myposts/Myposts.module.css","components/Profile/Myposts/Posts/Posts.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Myposts/Posts/Posts.jsx","components/Profile/Myposts/Myposts.jsx","components/Profile/Myposts/MypostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatus","editmode","status","activeEditMode","setState","onStatusChange","e","target","value","updateStatus","prevProps","prevState","snapshot","onChange","autoFocus","onBlur","deactiveEditMode","bind","onDoubleClick","ProfileInfo","profile","className","s","profileInfo","descriptionBlock","src","photos","large","UserPicture","fullName","aboutMe","Loading","Posts","item","profileImg","UserPhoto","message","likeCount","flagchange","z","text","idPost","id","onChangeEdit","newEditText","onClick","addEditPost","editPost","maxLength","maxLengthCreator","ReduxPostForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","placeholder","name","component","Textarea","Myposts","console","log","newMessage","postsData","reverse","map","Message","editpostText","postBlock","values","addPost","newPostText","delAllPost","posts","MypostsContainer","profilePage","postText","dispatch","action","addPostActionCreator","delAllPostActionCreator","editPostActionCreator","onChangeEditActionCreator","addEditPostActionCreator","Profile","content","ProfileContainer","userId","match","params","logUserId","history","push","getProfileThunk","getStatusThunk","updateStatusThunk","compose","profileStatus","withRouter"],"mappings":"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","file":"static/js/3.a2d98b96.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\nimport React from 'react'\nimport {connect} from \"react-redux\";\nimport Loading from \"../components/Users/Loading\";\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\n            return <Component {...this.props}/>\n        }\n    }\n    let connectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return connectAuthRedirectComponent\n}\n\nexport const withProfileRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (this.props.isAuth) return <Redirect to={\"/profile\"}/>\n            return <Component {...this.props}/>\n        }\n    }\n    let connectProfileRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return connectProfileRedirectComponent\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"mainPicture\":\"ProfileInfo_mainPicture__1DaUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"Myposts_postBlock__1s8fL\",\"area\":\"Myposts_area__1G9T-\",\"postArea\":\"Myposts_postArea__2P0-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__3rFcL\"};","import React from 'react'\n\n\nclass ProfileStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editmode: false,\n            status : this.props.status\n\n         };\n        this.activeEditMode = () => {\n            this.setState({\n                editmode: true\n            })\n\n        }\n\n        this.onStatusChange = (e) => {\n\n            this.setState({status:e.target.value})\n\n        }\n\n    }\n\n\n\n    deactiveEditMode() {\n        this.setState({\n            editmode: false\n        })\n        this.props.updateStatus(this.state.status)\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.status!== this.props.status ) {\n            this.setState({status:this.props.status} )\n        }\n    }\n\n    render() {\n        return <>\n            {this.state.editmode ? <div><input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactiveEditMode.bind(this)} value={this.state.status}/></div> :\n                <div><span onDoubleClick={this.activeEditMode.bind(this)}>{this.props.status || \"net statusa\"}</span></div>}\n        </>\n    }\n\n}\n\nexport default ProfileStatus","import s from \"./ProfileInfo.module.css\"\nimport Loading from \"../../Users/Loading\";\nimport UserPicture from \"../../../assets/users-picture.jpg\"\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\n\n\nconst ProfileInfo = (props) => {\n    if (!props.profile.profile) {\n        return <Loading/>\n    }\n    return (\n        <div className={s.profileInfo}>\n\n     {/*       <div className={s.mainPicture}>\n                <img src={props.profile.imgMain}/>\n            </div>*/}\n            <div className={s.descriptionBlock}>\n\n                <div><img src={props.profile.profile.photos.large === null ? UserPicture : props.profile.profile.photos.large }/></div>\n\n                <div>\n                    <div>{props.profile.profile.fullName}</div>\n                    <div>Обо мне: {props.profile.profile.aboutMe}</div>\n                    <ul>\n                        <li>Date of Birth: 18 april</li>\n                        <li>City: Saint-Petersburg</li>\n                        <li>Education: SpbGmty</li>\n                        <li>Web Site: https://sss.com</li>\n                    </ul>\n                </div>\n                <ProfileStatus status = {props.status} updateStatus = {props.updateStatus}/>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ProfileInfo","import s from \"./Posts.module.css\"\nimport UserPhoto from \"../../../../assets/users-picture.jpg\"\n\nconst Posts = (props) => {\n\n    let onEdit = () => {\n          let idPost = props.id\n        props.editPost(idPost)\n    }\n    let onChangeEdit = (z) => {\n        let text = z.target.value\n        let idPost = props.id\n        props.onChangeEdit(text, idPost)\n    }\n    let addEditPost = () => {\n        let idPost = props.id\n        props.addEditPost(idPost)\n    }\n    return <div className={s.item}>\n        {props.profileImg ? <img src={props.profileImg}/> : <img src={UserPhoto}/>}\n        {props.message}\n        <div><span>like : {props.likeCount}</span>\n        </div>\n\n        {props.flagchange ? <div>\n                <textarea onChange={onChangeEdit} value={props.newEditText}>edeed</textarea>\n                <button onClick={addEditPost}>Dobavit</button>\n            </div>\n            : <button onClick={onEdit}>Редактировать</button>}\n\n    </div>\n\n}\nexport default Posts\n","import s from \"./Myposts.module.css\"\nimport Posts from \"./Posts/Posts\"\nimport React, {Component} from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {addPostActionCreator} from \"../../Redux/profile_reducer\";\nimport {maxLengthCreator, required} from \"../../../utilits/validators\";\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\nimport Loading from \"../../Users/Loading\";\n\nconst Myposts = (props) => {\n   if (!props.profile.profile) {\n        return <Loading/>\n    }\n    console.log(\"render23\")\n    let newMessage = [...props.postsData].reverse()\n        .map(Message => <Posts\n            addEditPost = {props.addEditPost}\n            onChangeEdit={props.onChangeEdit}\n            editPost={props.editPost}\n            message={Message.message}\n            likeCount={Message.likeCount}\n            id={Message.id}\n            flagchange={Message.flagchange}\n            newEditText={Message.editpostText}\n            profileImg={props.profile.profile.photos.large}/>\n        );\n\n\n    console.log(newMessage)\n\n    const ondelAllPost = () => {\n        props.delAllPost()\n    }\n    const onSubmit = (values) => {\n        console.log(values)\n        props.addPost(values.newPostText)\n    }\n    return <div className={s.postBlock}>\n        my posts\n        <div>\n            <ReduxPostForm onSubmit={onSubmit}/>\n            <div>\n                <button onClick={ondelAllPost}>Удалить все!</button>\n            </div>\n        </div>\n        <div className={s.posts}>\n            {newMessage}\n        </div>\n\n    </div>\n\n}\n\nlet maxLength = maxLengthCreator(15)\n\nconst PostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field validate = {[required,maxLength]} placeholder={\"enter your text\"} name={\"newPostText\"} component={Textarea}/>\n            </div>\n            <div>\n                <button>Addpost</button>\n            </div>\n        </form>\n\n\n    )\n}\nconst ReduxPostForm = reduxForm({form: 'posts'})(PostForm)\n\nexport default Myposts\n","import {\n    addEditPostActionCreator,\n    addPostActionCreator,\n    delAllPostActionCreator,\n    editPostActionCreator, onChangeEditActionCreator,\n    onPostChangeActionCreator\n}\n    from \"../../Redux/profile_reducer\";\nimport Myposts from \"./Myposts\";\nimport {connect} from \"react-redux\";\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (text) => {\n            let action = addPostActionCreator(text);\n            dispatch(action)\n        },\n\n        delAllPost: () => {\n            let action = delAllPostActionCreator()\n            dispatch(action)\n        },\n        editPost: (idPost) => {\n            let action = editPostActionCreator(idPost)\n            dispatch(action);\n        },\n        onChangeEdit : (text,idPost) => {\n            let action = onChangeEditActionCreator(text,idPost)\n            dispatch(action)\n        },\n        addEditPost: (idPost) => {\n            let action = addEditPostActionCreator(idPost)\n            dispatch(action)\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        postsData: state.profilePage.postsData,\n        newPostText: state.profilePage.postText,\n       /* profileImg: state.profilePage.profile.photos.large,*/\n        profile: state.profilePage,\n    }\n}\n\n\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(Myposts)\nexport default MypostsContainer\n","import s from \"./Profile.module.css\"\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MypostsContainer from \"./Myposts/MypostsContainer\";\nimport {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {updateStatusThunk} from \"../Redux/profile_reducer\";\n\n\n\n\nconst  Profile = (props) => {\n\n    return <div className={s.content}>\n            <ProfileInfo profile = {props.profile} status = {props.status} updateStatus = {props.updateStatus}/>\n        <MypostsContainer />\n    </div>\n}\nexport default Profile\n","import Profile from \"./Profile\";\nimport React from 'react'\nimport {connect} from \"react-redux\";\nimport {getProfileThunk, getStatusThunk, updateStatusThunk,} from \"../Redux/profile_reducer\";\nimport {withRouter} from \"react-router\";\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.logUserId\n            if (!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n\n        this.props.getProfileThunk(userId)\n\n        this.props.getStatusThunk(userId);\n\n\n    }\n\n    render() {\n        console.log(\"render\")\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\n                        updateStatus={this.props.updateStatusThunk}/>\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    console.log(\"mstp\")\n    return ({\n            profile: state.profilePage,\n            isAuth: state.auth.isAuth,\n            status: state.profilePage.profileStatus,\n            logUserId: state.auth.id\n        }\n    )\n}\n\nexport default compose(connect(mapStateToProps, {getProfileThunk, getStatusThunk, updateStatusThunk,}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n\n\n"],"sourceRoot":""}